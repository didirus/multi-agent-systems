; This file handles all actions, after desire and intention
; has been determined. Contains no further comments as the
; code is self-explanatory.

to perform-actions
  if intention = i>DROP_OFF [drop-off-passengers]
  if intention = i>PICK_UP [pick-up-passengers]
  if intention = i>DRIVE [travel-to next-stop?]
end

to drop-off-passengers
  foreach bus_passengers [ let passenger ?
    if wants-to-leave passenger [
      drop-off passenger
      if debug_traffic [mention "Dropped off" passenger]]]
end

to pick-up-passengers
  foreach get-passengers-at-stop current_stop [ let passenger ?
    if wants-to-enter passenger and not overloaded? [
      pick-up passenger
      if debug_traffic [mention "Picked up" passenger]]
]
end

to pick-up [passenger] pick-up-passenger id-of passenger end
to drop-off [passenger] drop-off-passenger id-of passenger end

to-report next-stop?
  ifelse in-transit? [
    report next_stop]
  [
    ifelse home? 
      [report next-stop-in-district?]
      [report next-stop-to-district?]]
end

to-report next-stop-in-district?
  ifelse just-came-home? [
    report successor-of location? stops-of district]
  [
    let previous_element first stops-of district
    foreach enumerate stops-of district [ let current_index (? + 1) mod length stops-of district
      let current_element item current_index stops-of district
      if previous_element = previous_stop and current_element = location? [
        report item ((current_index + 1) mod length stops-of district) stops-of district]
      set previous_element current_element ]]
end

to-report next-stop-to-district?
  let closest_district_stop false
  let lowest_cost 999999
  
  foreach stops-of district [ let district_stop ?
    let cost item 1 table:get dijkstra (list location? district_stop)
    if cost < lowest_cost [
      set lowest_cost cost
      set closest_district_stop district_stop]]
  
  debug (word "Doing Dijkstra: not at " location? ", going to " closest_district_stop " via " (first first table:get dijkstra (list location? closest_district_stop)))
  report first first table:get dijkstra (list location? closest_district_stop)
end

to mention [message passenger]
  show (word message " passenger "id-of passenger " (dest=" destination-of passenger ") at stop " current_stop) 
end