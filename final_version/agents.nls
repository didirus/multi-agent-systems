__includes["action.nls" "update-intentions.nls" "perform-actions.nls" "init-buses.nls" "protocols.nls" "procedures.nls" "messaging.nls" "read-dijkstra.nls" "auction.nls" "money.nls"]

extensions[table]

globals [graph]

buses-own [
  ; STATIC READ-ONLY
  bus_id          ; The ID of a given agent (bus). Each agent has a unique ID.
  bus_type        ; The type of a given agent (bus). 1 means "small", 2 means "medium" and 3 means "large".
  
  ; DYNAMIC READ-ONLY
  inbox           ; List containing all the incoming messages (a given message is a list like this [tick sender message]).
  bus_passengers  ; List containing all the passengers that the agent (bus) is currently carrying (represented as a list like this [passenger_id bus_stop]).
  previous_stop   ; ID of the last bus stop that the agent (bus) visited (-1 means that the agent has not visited any bus stop yet).
  current_stop    ; ID of the bus stop where the agent (bus) currently is (-1 means that the agent is not at any bus stop).
  next_stop       ; ID of the bus stop the agent (bus) is traveling to (-1 means that the agent is not travelling to any bus stop).
  
  ; CONFIGS
  debug_traffic        ; Set to true to make buses talk about picking up and dropping off passengers.
  debug_messages       ; Set to true to make buses talk about everything message / protocol.
  debug_purchases      ; Set to true to make buses say something right after they've been bought.
  debug_show_ticks     ; Set to true to show the tick number at each debug output.
  debug_show_districts ; Set to true to show the district number at each debug output.
  debug_auctions       ; Set to true to show the auction details.
  debug_money          ; Set to true to show in-/outcomes.
  
  ; CONSTANTS
  districts                  ; List of all tracks and their stops.
  junctions                  ; List of junction between tracks.
  dijkstra                   ; Table of dijkstra algorithm results.
  marker                     ; Marker symbol for easy debugging.
  central_station            ; The index of the station where all buses start.
  small_bus                  ; The integer encoding for 'small bus'.
  medium_bus                 ; The integer encoding for 'medium bus'.
  large_bus                  ; The integer encoding for 'large bus'.
  social_choice_function     ; The social choice function currently in use.
  capacity_type_1            ; The capacity of bus type 1
  capacity_type_2            ; The capacity of bus type 2
  capacity_type_3            ; The capacity of bus type 3
  
  ; BEHAVIORS
  b>DRIVE
  b>LOAD
  b>UNLOAD
  
  ; VARIABLES
  desire          ; The current desire of this bus.
  intention       ; The current intention of this bus that has the highest priority.
  district        ; The index of the track this bus is currently driving.
  
  ; Beneath are protocol states and messages and
  ; protocol-specific variables the bus is keeping
  ; track of. Names with : are protocol states,
  ; names with . are protocol messages, and names
  ; with / are protocol-specific variables.
  
  overloaded:UNINITIATED                 ; Protocol not started.
  overloaded:ABOUT_TO_BUY                ; Start of protocol; just got overloaded.
  overloaded:INSTRUCTING                 ; Bought a new bus; need to instruct him where to go.
  overloaded:COLLIDED                    ; Other bus on my track also just overloaded.
  overloaded:BOUGHT_SIMULTANEOUSLY       ; I detected a simultaneous buy; need to decide who will instruct new buses.
  overloaded:RESOLVING_SIMULTANEOUS_BUY  ; Resolving simulaneously buying procedure. 
  overloaded:AWAITING_RESPONSE           ; I want to buy, awaiting responses.
  overloaded:AWAITING_VOTES              ; I'm waiting for votes on the capacity of the new bus.
  overloaded:COLLECTING_VOTES            ; Votes are in. Will now aggregate votes and make a decision!
  
  overloaded.want_to_buy                 ; Broadcast messages telling fellow track members I just overloaded.
  overloaded.do_not_buy                  ; Private message telling fellow track member I still have capacity.
  overloaded.we_collided                 ; Private message telling fellow track member I also want to buy.
  overloaded.come_to_district            ; Private message telling newly bought bus which track to go.
  overloaded.we_both_bought              ; Broadcast message to identify simultaneous buyers
  overloaded.cast_your_vote              ; Broadcast message asking buses to vote for capacity of new bus
  overloaded.here_is_my_vote             ; Private message containing preference list for new bus capacity
  
  overloaded/quiet_district_threshold    ; A constant; defines the number of non-busy buses in a quiet district.
  overloaded/state                       ; Keeps track of the protocol state.
  overloaded/timeout                     ; A constant; determines how long to wait after buying bus.
  overloaded/timer
  overloaded/oldest_requester            ; Temporarily store ID of oldest requester.
  overloaded/other_buyers                ; Temporary store districts of simultaneous buyers.
  overloaded/oldest_buyer                ; Temporarily store ID of olders buyer.
  overloaded/newest_bus                  ; The ID of the newest bus right before I bought one.
  overloaded/other_district_blockers     ; If I want to buy, keep track of buses of other districts that want to help out.
  overloaded/capacity_preferences        ; List of voted preferences for capacity of the bus I'm going to buy.
  
  discovery.this_is_my_id
  
  discovery/colleagues
  discovery/oldest_bus
  
  money.request_payment
  money.here_is_my_money
  
  money/balance 
  money/cost_per_waiting_passenger
  money/dropped_of_this_tick
  money/payment_per_drop_off
  
  auction::TYPE
  
  auction:UNINITIATED                    ; Protocol not started.
  auction:AWAITING_RESPONSE              ; I want to auction myself, awaiting responses.
  auction:ABOUT_TO_AUCTION
  
  auction.initiating_auction
  auction.this_is_my_bid
  
  auction/state
  auction/winner
  auction/winning_district
  auction/winning_bid
  auction/am_I_alone_in_district
  
  ;-----
  ; vickrey 
  ;-----
  auction/vickrey_bid
  
  ;-----
  ; english
  ;-----
  auction/maximum_duration
  auction/duration
  auction/current_bids 
  auction/improvement
  auction/bid_range
]

to execute-actions
  ; The main executing loop for the bus. At each tick, first
  ; determines which desire to pursue. Then, determines which
  ; intentions go with that right now. Given the intentions,
  ; the bus knows which actions to perform. After doing stuff,
  ; check inbox for new messages (and reply to them). Lastly,
  ; go over all protocols to see if the bus needs to act on them.
  
  action
  check-inbox
  lead-protocols

  if only-bus? [ buy-first-buses ]
end

to buy-first-buses foreach range-until (length districts - 1) [ add-bus small_bus ] end